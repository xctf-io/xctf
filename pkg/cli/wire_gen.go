// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cli

import (
	"github.com/urfave/cli/v2"
	"github.com/xctf-io/xctf/pkg/admin"
	"github.com/xctf-io/xctf/pkg/backend"
	"github.com/xctf-io/xctf/pkg/config"
	"github.com/xctf-io/xctf/pkg/db"
	"github.com/xctf-io/xctf/pkg/http"
	"github.com/xctf-io/xctf/pkg/kubes"
	"github.com/xctf-io/xctf/pkg/log"
	"github.com/xctf-io/xctf/pkg/server"
)

// Injectors from wire.go:

func Wire() (*cli.App, error) {
	provider, err := config.New()
	if err != nil {
		return nil, err
	}
	logConfig, err := log.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	logLog := log.NewLog(logConfig)
	serverConfig, err := server.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	dbConfig, err := db.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	service, err := db.New(dbConfig)
	if err != nil {
		return nil, err
	}
	store, err := http.New(service)
	if err != nil {
		return nil, err
	}
	kubesService, err := kubes.NewService()
	if err != nil {
		return nil, err
	}
	backendBackend := backend.NewBackend(service, store)
	adminAdmin := admin.NewAdmin(service)
	handler, err := server.New(serverConfig, store, kubesService, backendBackend, adminAdmin, service)
	if err != nil {
		return nil, err
	}
	app := New(logLog, handler)
	return app, nil
}
