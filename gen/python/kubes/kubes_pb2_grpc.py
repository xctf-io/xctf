# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kubes import kubes_pb2 as kubes_dot_kubes__pb2


class KubesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListDeployments = channel.unary_unary(
                '/kubes.KubesService/ListDeployments',
                request_serializer=kubes_dot_kubes__pb2.ListDeploymentsRequest.SerializeToString,
                response_deserializer=kubes_dot_kubes__pb2.ListDeploymentsResponse.FromString,
                )
        self.NewDeployment = channel.unary_unary(
                '/kubes.KubesService/NewDeployment',
                request_serializer=kubes_dot_kubes__pb2.NewDeploymentRequest.SerializeToString,
                response_deserializer=kubes_dot_kubes__pb2.NewDeploymentResponse.FromString,
                )
        self.DeleteDeployment = channel.unary_unary(
                '/kubes.KubesService/DeleteDeployment',
                request_serializer=kubes_dot_kubes__pb2.DeleteDeploymentRequest.SerializeToString,
                response_deserializer=kubes_dot_kubes__pb2.DeleteDeploymentResponse.FromString,
                )


class KubesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListDeployments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KubesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeployments,
                    request_deserializer=kubes_dot_kubes__pb2.ListDeploymentsRequest.FromString,
                    response_serializer=kubes_dot_kubes__pb2.ListDeploymentsResponse.SerializeToString,
            ),
            'NewDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.NewDeployment,
                    request_deserializer=kubes_dot_kubes__pb2.NewDeploymentRequest.FromString,
                    response_serializer=kubes_dot_kubes__pb2.NewDeploymentResponse.SerializeToString,
            ),
            'DeleteDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDeployment,
                    request_deserializer=kubes_dot_kubes__pb2.DeleteDeploymentRequest.FromString,
                    response_serializer=kubes_dot_kubes__pb2.DeleteDeploymentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kubes.KubesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KubesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kubes.KubesService/ListDeployments',
            kubes_dot_kubes__pb2.ListDeploymentsRequest.SerializeToString,
            kubes_dot_kubes__pb2.ListDeploymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kubes.KubesService/NewDeployment',
            kubes_dot_kubes__pb2.NewDeploymentRequest.SerializeToString,
            kubes_dot_kubes__pb2.NewDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kubes.KubesService/DeleteDeployment',
            kubes_dot_kubes__pb2.DeleteDeploymentRequest.SerializeToString,
            kubes_dot_kubes__pb2.DeleteDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
