syntax = "proto3";

package xctf;

option go_package = "gen/xctf";

service Backend {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(Empty) returns (Empty);
  rpc CurrentUser(CurrentUserRequest) returns (CurrentUserResponse);

  rpc SubmitFlag(SubmitFlagRequest) returns (SubmitFlagResponse);

  rpc SubmitEvidenceReport(SubmitEvidenceReportRequest) returns (SubmitEvidenceReportRequest);
  rpc GetDiscoveredEvidence(GetDiscoveredEvidenceRequest) returns (GetDiscoveredEvidenceResponse);
  rpc SubmitEvidence(SubmitEvidenceRequest) returns (SubmitEvidenceResponse);
  rpc SubmitEvidenceConnection(SubmitEvidenceConnectionRequest) returns (SubmitEvidenceConnectionResponse);
  rpc GetHomePage(GetHomePageRequest) returns (GetHomePageResponse);
  rpc ForgotPassword(ForgotPasswordRequest) returns (Empty);
  rpc SubmitWriteup(SubmitWriteupRequest) returns (Empty);
}

service Admin {
  rpc UpsertChallenge(UpsertChallengeRequest) returns (Empty);
  rpc DeleteChallenge(DeleteChallengeRequest) returns (Empty);
  rpc GetTeamsProgress(GetTeamsProgressRequest) returns (GetTeamsProgressResponse);
  rpc GetAllChallenges(GetAllChallengesRequest) returns (GetAllChallengesResponse);
  rpc SetHomePage(SetHomePageRequest) returns (Empty);
  rpc GetWriteup(GetWriteupRequest) returns (GetWriteupResponse);
  rpc SubmitGrade(SubmitGradeRequest) returns (Empty);
  rpc SubmitComments(SubmitCommentsRequest) returns (Empty);
  rpc GetUserGraph(GetUserGraphRequest) returns (GetUserGraphResponse);
}

message Empty {}

message UpsertChallengeRequest {
  string challengeName = 1;
  string flag = 2;
}

message DeleteChallengeRequest {
  string challengeName = 1;
}

message SubmitEvidenceReportRequest {
  string url = 1;
}

message SubmitEvidenceReportResponse {}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string username = 1;
  string userRole = 2;
}

message Evidence {
  uint32 id = 1;
  string name = 2;
  uint32 challengeID = 3;
  int32 x = 4;
  int32 y = 5;
  bool isFlag = 6;
}

message Connection {
  uint32 id = 1;
  uint32 source = 2;
  uint32 destination = 3;
}

message GetDiscoveredEvidenceRequest {}
message GetDiscoveredEvidenceResponse {
  string report = 1;
  repeated Evidence evidence = 2;
  repeated Connection connections = 3;
}

message SubmitEvidenceRequest {
  // this could either be the name of some evidence or a flag.
  string evidence = 1;
  int32 x = 2;
  int32 y = 3;
	bool isFlag = 4;
  bool remove = 5;
}

message SubmitEvidenceResponse {
  string name = 1;
}

message SubmitEvidenceConnectionRequest {
  uint32 source = 1;
  uint32 destination = 2;
  bool remove = 3;
}

message SubmitEvidenceConnectionResponse {
  bool created = 1;
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterResponse {
  bool created = 1;
}

message Page {
  string route = 1;
  string title = 2;
  string content = 3;
}

message CurrentUserRequest {}
message CurrentUserResponse {
  string username = 1;
  string userRole = 2;
  repeated Page pages = 3;
}

message SubmitFlagRequest {
  string flag = 1;
}

message SubmitFlagResponse {
  bool correct = 1;
}

message TeamProgress {
  string teamName = 1;
  bool hasWriteup = 2;
  uint32 score = 3;
  uint32 grade = 4;
}

message GetTeamsProgressRequest {}
message GetTeamsProgressResponse {
  repeated TeamProgress teams = 1;
}

message Challenge {
  string name = 1;
  string flag = 2;
}

message GetAllChallengesRequest {}
message GetAllChallengesResponse {
  repeated Challenge challenges = 1;
}

message SetHomePageRequest {
  string content = 1;
}

message GetHomePageRequest {}
message GetHomePageResponse {
  string content = 1;
}

message ForgotPasswordRequest {
  string email = 1;
}

message SubmitWriteupRequest {
  string content = 1;
}

message GetWriteupRequest {
  string username = 1;
}
message GetWriteupResponse {
  string content = 1;
}

message SubmitGradeRequest {
  string username = 1;
  uint32 score = 2;
}

message HighlightArea {
  int32 height = 1;
  int32 width = 2;
  uint32 pageIndex = 3;
  int32 top = 4;
  int32 left = 5;
}

message SubmitCommentsRequest {
  string username = 1;
  uint32 id = 2;
  string content = 3;
  repeated HighlightArea areas = 4;
  string quote = 5;
}

message GetUserGraphRequest {
  string username = 1;
}
message GetUserGraphResponse {
  repeated Evidence evidence = 1;
  repeated Connection connections = 2;
}